{
  "Comment": "A description of my state machine",
  "StartAt": "Start Request?",
  "States": {
    "Start Request?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.Request",
          "StringEquals": "makerequest",
          "Next": "PutRequestDB"
        }
      ],
      "Default": "Fail"
    },
    "PutRequestDB": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "arn:aws:lambda:us-east-1:517565264163:function:setrequests:$LATEST"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "Comparefaces"
    },
    "Comparefaces": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "arn:aws:lambda:us-east-1:517565264163:function:facerek:$LATEST"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "Face matched?"
    },
    "Face matched?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.status",
          "StringEquals": "nomatched",
          "Next": "Face not matched"
        }
      ],
      "Default": "GetDelivery"
    },
    "GetDelivery": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "arn:aws:lambda:us-east-1:517565264163:function:getdeliverys:$LATEST"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "Delivery is ready?"
    },
    "Delivery is ready?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.delivery",
          "BooleanEquals": true,
          "Next": "Wait to get to the table"
        }
      ],
      "Default": "Wait to get again"
    },
    "Wait to get to the table": {
      "Type": "Wait",
      "Seconds": 5,
      "Next": "Confirm Face"
    },
    "Confirm Face": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "arn:aws:lambda:us-east-1:517565264163:function:facerek:$LATEST"
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "Face confirmed?"
    },
    "Face confirmed?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.status",
          "StringEquals": "nomatched",
          "Next": "Face confirm not matched"
        }
      ],
      "Default": "Success"
    },
    "Face confirm not matched": {
      "Type": "Fail"
    },
    "Wait to get again": {
      "Type": "Wait",
      "Seconds": 5,
      "Next": "GetDelivery"
    },
    "Success": {
      "Type": "Succeed"
    },
    "Face not matched": {
      "Type": "Fail"
    },
    "Fail": {
      "Type": "Fail",
      "Error": "Aborted Execution"
    }
  }
}
